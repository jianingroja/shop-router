{"version":3,"sources":["Nav.js","Shop.js","About.js","ItemDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","navStyle","color","textDecoration","style","to","className","Item","useEffect","fetchItems","useState","items","setItems","a","fetch","data","json","console","log","map","item","itemId","name","About","ItemDetail","match","fetchItem","images","setItem","params","id","src","information","alt","Home","App","path","component","exact","Shop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA0BeA,MAtBf,WACE,IAAMC,EAAW,CACfC,MAAO,QACPC,eAAgB,QAElB,OACE,gCACE,cAAC,IAAD,CAAMC,MAAOH,EAAUI,GAAG,IAA1B,SACE,wCAEF,qBAAIC,UAAU,WAAd,UACE,cAAC,IAAD,CAAMF,MAAOH,EAAUI,GAAG,SAA1B,SACE,yCAEF,cAAC,IAAD,CAAMD,MAAOH,EAAUI,GAAG,QAA1B,SACE,+C,gCCUKE,MAzBf,WACEC,qBAAU,WACRC,MACC,IAHW,MAKYC,mBAAS,IALrB,mBAKPC,EALO,KAKAC,EALA,KAMRH,EAAU,uCAAG,8BAAAI,EAAA,sEACEC,MACjB,uDAFe,cACXC,EADW,gBAIGA,EAAKC,OAJR,OAIXL,EAJW,OAKjBM,QAAQC,IAAIP,EAAMI,MAClBH,EAASD,EAAMI,MANE,2CAAH,qDAQhB,OACE,8BACGJ,EAAMQ,KAAI,SAACC,GAAD,OACT,oBAAId,UAAU,YAAd,SACE,eAAC,IAAD,CAAMD,GAAE,gBAAWe,EAAKC,QAAxB,cAAoCD,EAAKA,KAAKE,SADjBF,EAAKC,cCV7BE,MARf,WACE,OACE,8BACE,+CC4BSC,MA/Bf,YAAgC,IAAVC,EAAS,EAATA,MACpBjB,qBAAU,WACRkB,IACAT,QAAQC,IAAI,CAAEO,YACb,IAJ0B,MAMLf,mBAAS,CAC/BiB,OAAQ,KAPmB,mBAMtBP,EANsB,KAMhBQ,EANgB,KAYvBF,EAAS,uCAAG,8BAAAb,EAAA,sEACQC,MAAM,sDAAD,OAC2BW,EAAMI,OAAOC,KAFrD,cACVJ,EADU,gBAIGA,EAAUV,OAJb,OAIVI,EAJU,OAMhBH,QAAQC,IAAIE,GAEZQ,EAAQR,EAAKL,KAAKK,MARF,2CAAH,qDAWf,OACE,gCACE,oBAAId,UAAU,YAAd,SAA2Bc,EAAKE,OAChC,qBAAKS,IAAKX,EAAKO,OAAOK,YAAaC,IAAKb,EAAKE,W,OCLnD,IAAMY,EAAO,kBACX,8BACE,8CAIWC,EAtBf,WACE,OACE,cAAC,IAAD,UACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8B,KAAK,SAASC,UAAWd,IAChC,cAAC,IAAD,CAAOa,KAAK,QAAQE,OAAK,EAACD,UAAWE,IACrC,cAAC,IAAD,CAAOH,KAAK,YAAYC,UAAWb,IACnC,cAAC,IAAD,CAAOY,KAAK,IAAIC,UAAWH,aCLtBM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fcd5989d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  const navStyle = {\n    color: \"white\",\n    textDecoration: \"none\",\n  };\n  return (\n    <nav>\n      <Link style={navStyle} to=\"/\">\n        <h3>Home</h3>\n      </Link>\n      <ul className=\"nav-link\">\n        <Link style={navStyle} to=\"/about\">\n          <li>About</li>\n        </Link>\n        <Link style={navStyle} to=\"/shop\">\n          <li>Shop</li>\n        </Link>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Item() {\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  const [items, setItems] = useState([]);\n  const fetchItems = async () => {\n    const data = await fetch(\n      \"https://fortnite-api.theapinetwork.com/upcoming/get\"\n    );\n    const items = await data.json();\n    console.log(items.data);\n    setItems(items.data);\n  };\n  return (\n    <div>\n      {items.map((item) => (\n        <h3 className=\"item-name\" key={item.itemId}>\n          <Link to={`/shop/${item.itemId}`}> {item.item.name}</Link>\n        </h3>\n      ))}\n    </div>\n  );\n}\n\nexport default Item;\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction About() {\n  return (\n    <div>\n      <h1>About Page</h1>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction ItemDetail({ match }) {\n  useEffect(() => {\n    fetchItem();\n    console.log({ match });\n  }, []);\n\n  const [item, setItem] = useState({\n    images: {},\n    //???\n    //hook\n  });\n\n  const fetchItem = async () => {\n    const fetchItem = await fetch(\n      `https://fortnite-api.theapinetwork.com/item/get?id=${match.params.id}`\n    );\n    const item = await fetchItem.json();\n\n    console.log(item);\n    //console.log(item.data.item.name);\n    setItem(item.data.item);\n  };\n\n  return (\n    <div>\n      <h1 className=\"item-name\">{item.name}</h1>\n      <img src={item.images.information} alt={item.name} />\n    </div>\n  );\n}\n\nexport default ItemDetail;\n","import React from \"react\";\nimport \"./App.css\";\nimport Nav from \"./Nav\";\nimport Shop from \"./Shop\";\nimport About from \"./About\";\nimport ItemDetail from \"./ItemDetail\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/shop\" exact component={Shop} />\n          <Route path=\"/shop/:id\" component={ItemDetail} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst Home = () => (\n  <div>\n    <h1>Home Page</h1>\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}